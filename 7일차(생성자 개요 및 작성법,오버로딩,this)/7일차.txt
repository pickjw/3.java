7일차(생성자 개요 및 작성법,오버로딩,this)

 자바의 문법(4대특성)=>객체지향 프로그래밍

 ->자바,C++,C#,파이썬(빅데이터)->자바+자바스크립트
 
 추상화(새로운 자료형)->
 캡슐화(올바른 값만 입력 설계)
-------------------------------
 다형성
 ->배열=>중간점검
----------------------------------
 상속성->객체배열
 ------------------------------


과제풀이)

패키지->j1212로 작성한후 다음과 같은 클래스를 작성하시오

 직사각형의 면적을 구할려고 한다.=>가로(x),세로(y)
                                   
1.Rect.java(직사각형),
  RectHandling.java(main()) 클래스에 캡슐화를 적용하시오.
  
1) x,y값은 음수를 받을 수 없도록 설정
2) Setter,Getter Method를 작성할것.

메서드의 종류 3번째

============================================================
***매개변수 O  반환값 O ->웹에서 호출하는 메서드의 대표적***
                     ->계산목적으로 사용

 반환형(int) 메서드명(자료형 변수1,자료형 변수2,,,){
     처리하는 구문;

    return 계산결과값(변수1*변수2) //보고문
  }
=======================================================
2.ThreeTest.java로 저장할것.

세개의 값을 입력받아서 최대값을 구해주는 프로그램작성

  12,4,19   //int a,b,c 

 최대값은 19 입니다.

(단 getMaxPrint메서드를 작성해서 구현할 것.)
----------------------------------------------------------
다형성->다형하게 표현이 되는 메서드를 작성할때 사용하는 문장
      ->메서드의 다형성->생성자,this,오버로딩
                         =====================

PersonTest.java
----------------

생성자(자바)---->C++ (생성자 함수)
                             ====
            같은 기능

객체=인스턴스=참조변수=레퍼런스 변수

1.객체를 생성할때만 없다면 자동으로 생성->자동으로 호출되는 메서드
                  ========
    =>객체를 생성하지 않으면 ->자동으로 호출X

  ex)핸드폰 문자메세지=>신용카드 결재->자동으로 폰(결재내역)

2.멤버변수의 값을 초기화할때 사용->맨 처음 저장시킬때 사용

3.리턴값을 표시하지 않지 않는다.=void (X)

형식)[접근지정자] 반환형 메서드명(~){}->일반메서드
      
      [접근지정자] 클래스명(매개변수~){ 멤버변수의 초기값 설정}

      매개변수 없는 생성자->기본생성자
      클래스명(){}->매개변수 X ,내용X

** 자바에서 멤버변수에 값을 저장시키는 방법**

 1.Setter Method()를 이용해서 값을 저장
 2.생성자(constructor)를 이용해서 값을 저장 
================================================

  두개의 차이점

 공통점 ->둘다 멤버변수에 값을 저장시킬 수 있다.
 차이점 ->중간에 멤버변수의 값을 변경->생성자X
             ->담당 멤버변수의 Setter Method를 이용=>수정목적
 
 생성자->맨처음에 한꺼번에 값을 초기화 시킬때 사용->회원가입(입력용)
 Setter Method->회원수정->특정한 값만 수정(수정용)
=================================================================
 class Data1{
   int value;
   //Data1(){} ->없으면 만들어서 호출
}  

 //기본생성자를 자동으로 안 만들어주는 경우->호출하면 에러유발
                              ->명시적으로 기본생성자를 작성
  -->다른 생성자가 이미 존재한다면

  Data1 d1=new Data1(); //1)


  class Data2{
  int value;
   Data2(){} //반드시 기술
   
   Data2(int x){} //이미 다른 생성자가 존재하기때문에 
   
 }

==========================================================
 생성자 오버로딩?
 메서드 오버로딩?
----------------------------------------------------------
오버로딩(overloadding)=>메서드 겹친다

정의=>같은 클래스에 내부에 비슷한 기능을 가진 메서드가 여러개
      존재 할때 각각의 메서드를 구분하기위해서는 이름을 각각
      다르게 줘야된다.

      편리성때문에 작성

    =>메서드명은 하나로 통합하고 
      매개변수 갯수와 매개변수의 자료형으로 
      서로 구분하게 설정하는 해주는 기법
======================================================

 ****메서드의 오버로딩의 조건***

메서드의 이름은 같게 설정(필수)
메서드의 매개변수를 다르게 설정
메서드의 자료형을 다르게 설정
========================================================

  생성자의 오버로딩=>똑같은 생성자를 여러개 작성
                   =>**다양한 방법(매개변수의 갯수)으로 
                       멤버변수에 값을 저장시키기 위해서**
   n(=멤버변수의 갯수) ==========================================
  2
   =>4개를 만들 수 있다.
   =>(),(name),(age),(name,age)

color,gearType,door

(),(color),(gearType),(door)

(color,gearType),(gearType,door),(color,door)
(color,gearType,door)
=====================>필요로하는 것만 생성
Person()

 메서드 오버로딩->PrintTest.java
       +
 생성자 오버로딩
----------------------------------
생성자=>멤버변수의 다양한 초기값을 설정
      =>생성자->메서드 소속

 하나의 클래스 내부에서도 메서드호출->main()->print()->print2()
                                           <-
   (main) 일반
 =>사장->부장->과장->대리->사원
       <--   <-    <-    <-
 
  (Object ... args)=>동적배열(5장 고정 배열)
   main()->생성자()->또 다른 메서드를 호출처리

   객체명.일반메서드()<-->정적메서드(),배열
-----------------------------------------------
=>예습)p295 this?, this(),5장.배열->ppt제공(자바의 배열)
=>배열? 1차원배열,2차원배열,확장 for문?(=p166 향상된 for)
        p219 *가변배열
--------------------------------------------
10분 다른 예제
---------------
WhileTest3.java





























