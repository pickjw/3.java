1일차(프로그램의 설치및 환경설정,작성법(자바의 문법))

ncs 문제 풀이(피드백)

->재시험 대상자=>다음주 월요일
==============================
1.프로그램 설치(java->oracle사로 인수)

 =>java.sun.com=>http://www.oracle.com/technetwork/java/index.html
                 =================================================

 =>Java SE 9.0.1

**용어정리**

**버전->개발버전=>가장 최신버전->항상 버그가 내장될 가능성이 있다.
                =>인터넷 검색->자료가 부족=>정확하게 알수가 없는경우가
                                            많다.(권장X)
                =>자바+톰캣서버+스프링+,,,연결해서 사용하다보면 최신버전과 충돌나는
                  가능성이 있기에 권장하지 않는다.

        안정화버전->가장 최신버전의 바로 밑에 있는 버전=>회사에서 선택

  
=======================================================================
**
  JDK(Java Development kit)=>자바 개발 버전(대중적)=>자바프로그램->down
                           =>p8 javac.exe=>중요한 실행파일중의 하나
                                java.exe


  Windows x86 198.46 MB   jdk-8u152-windows-i586.exe =>32bit 운영체제에서
                                                       설치하는 자바프로그램

  Windows x64 206.42 MB   jdk-8u152-windows-x64.exe =>이것을 다운로드 작성

                           =>**64bit 운영체제에서 설치하는 자바프로그램
                           =>**모바일을 설치->64bit 필수
========================================================================
  JRE(Java Runtime Envirnment)=>테스트 버전(이미 개발이 완료된 버전)
                              =>테스트 용도로 사용
                              =>javac.exe (X) ->java.exe (O)
=========================================================================
 설치하는 방법->그냥 next하면 문제 없다.

 환경설정->자바가 설치된 경로가 필요
         ->C:\Program Files\Java\jdk1.8.0_152\->152번의 업데이트가 작성
         ->C:\jdk1.8\ ==>줄어든다.=>설치경로만 변경

         JRE->경로 변경하지 않고 그냥 next하면된다.->close

-------------------------------------------------------------------------
**자바설치가 제대로 됐는지를 확인하는 방법**

1.
C:\jdk1.8\bin==>실행파일 javac.exe,java.exe파일이 존재(폴더 개수 5개확인)

2.자바의 버전을 확인하는 명령어를 입력->java -version

Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

************************************************************************
C:\Users\kitcoop>java -version  =>자바의 버전을 확인할때 사용하는 명령어
*************************************************************************
java version "1.8.0_152"  ========>자바의 버전명
Java(TM) SE Runtime Environment (build 1.8.0_152-b16)
Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)

C:\Users\kitcoop>javac =>현재 상태 javac.exe를 사용할 수 없는 상태라는 의미
                 ----------------------------------------------------------
                 ->환경설정을 해야할 필요가 있다.
                 ---------------------------------
'javac'은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는
배치 파일이 아닙니다.

C:\Users\kitcoop>java
사용법: java [-options] class [args...]
           (클래스 실행)
   또는  java [-options] -jar jarfile [args...]
           (jar 파일 실행)
여기서 options는 다음과 같습니다.
    -d32          사용 가능한 경우 32비트 데이터 모델을 사용합니다.
    -d64          사용 가능한 경우 64비트 데이터 모델을 사용합니다.
    -server       "server" VM을 선택합니다.
                  기본 VM은 server입니다..

    -cp <디렉토리 및 zip/jar 파일의 클래스 검색 경로>
    -classpath <디렉토리 및 zip/jar 파일의 클래스 검색 경로>
                  클래스 파일을 검색할 ;(으)로 구분된 디렉토리,
                  JAR 아카이브 및 ZIP 아카이브 목록입니다.
    -D<name>=<value>
                  시스템 속성을 설정합니다.
    -verbose:[class|gc|jni]
                  상세 정보 출력을 사용으로 설정합니다.
    -version      제품 버전을 인쇄한 후 종료합니다.
    -version:<value>
                  경고: 이 기능은 사용되지 않으며
                  이후 릴리스에서 제거됩니다.
                  실행할 버전을 지정해야 합니다.
    -showversion  제품 버전을 인쇄한 후 계속합니다.
    -jre-restrict-search | -no-jre-restrict-search
                  경고: 이 기능은 사용되지 않으며
                  이후 릴리스에서 제거됩니다.
                  버전 검색에서 사용자 전용 JRE를 포함/제외합니다.
    -? -help      이 도움말 메시지를 인쇄합니다.
    -X            비표준 옵션에 대한 도움말을 인쇄합니다.
    -ea[:<packagename>...|:<classname>]
    -enableassertions[:<packagename>...|:<classname>]
                  세분성이 지정된 검증을 사용으로 설정합니다.
    -da[:<packagename>...|:<classname>]
    -disableassertions[:<packagename>...|:<classname>]
                  세분성이 지정된 검증을 사용 안함으로 설정합니다.
    -esa | -enablesystemassertions
                  시스템 검증을 사용으로 설정합니다.
    -dsa | -disablesystemassertions
                  시스템 검증을 사용 안함으로 설정합니다.
    -agentlib:<libname>[=<options>]
                  <libname> 고유 에이전트 라이브러리를 로드합니다(예: -agentli
hprof).
                  -agentlib:jdwp=help 및 -agentlib:hprof=help도 참조하십시오.
    -agentpath:<pathname>[=<options>]
                  전체 경로명을 사용하여 고유 에이전트 라이브러리를 로드합니다
    -javaagent:<jarpath>[=<options>]
                  Java 프로그래밍 언어 에이전트를 로드합니다. java.lang.instru
nt를 참조하십시오.
    -splash:<imagepath>
                  이미지가 지정된 스플래시 화면을 표시합니다.
자세한 내용은 http://www.oracle.com/technetwork/java/javase/documentation/inde
html을 참조하십시오.

C:\Users\kitcoop>


***자바설치후 환경설정****

프로그램을 설치->바로가기 아이콘이 만들어지면서 설치가 되는 프로그램
                  ->editplus,,,=>설치경로를 따로 보통 저장(path환경변수)자동
                  ->oracle,,,

                 바로가기 아이콘이 안만들어지면서 설치되는 프로그램
                  ->보통 path환경변수에 저장이 안된다.(자동으로 실행X)

*************************************************************************
path 환경변수=>프로그램이 설치되면 자동적으로 설치된 경로를 등록시켜주는
               역할을 해주는 환경 변수
             =>자바의 설치경로를 path환경변수에 등록(수동)
*************************************************************************
  경로1;경로2;경로3;,,,,
       = 경로구분자로 사용한다.

 path환경변수 뒤에 추가 ;C:\jdk1.8\bin

  path환경변수=>~OpenCL SDK\2.0\bin\x64;C:\jdk1.8\bin
                                      ================
결론) 자바를 설치하고나서 path환경변수에 자바설치 경로를 등록

     =>콘솔에서 자바프로그램을 실행시키기 위해서
--------------------------------------------------------------
    개념                 과제
1.콘솔로 작업-->2.editplus(자바프로그램 사용)설정->3.eclipse에서 최종설정
=========================================================================

**자바프로그램을 개발하기위한 전제조건**

1.JDK설치가 먼저 되어있어야 한다.->PATH에 설정
2.편집기가 필요	=>메모장,에디트플러스
-------------------------------------------------

프로그램을 작성->전체 과정을 확인

자바프로그램 작성->파일작성(~.java)=>HelloTest.java
                메모장->모든 파일로 설정할 것.(주의)


******자바의 기본문법******

1.작성형식=>하나의 프로그램(1인 회사)
*********************************************************
public class HelloTest(프로그램이름(=파일명과 동일)=클래스){

        //사장(->메인메서드)=자바스크립트 함수
	public static void main(String args[]){
             //문법->프로그램의 기능을 써주면 된다.
        } 
}

=>HelloTest.java
**********************************************************
2.영문자인데 소문자위주로 작성할것.(대,소문자 구분)->단어중심
3.프로그램이름->첫글자는 대문자로 시작,중간에 단어가 변경되면
                대문자를 작성한다.=>한글은 가능하지만 사용X
4.주석->코드 중간에 적절한 설명문을 첨부한 문장
        // ->한줄 주석  /* 여러줄 주석~*/

5.자바코드->객체명.메서드명(~) or 객체명.속성=값]
          ->단어와 단어사이에 중간에 .을찍어서 표현
            ------------------------------------
   System.out=>표준출력장치(=>모니터(화면))<===>document(자바스크립트)
                               콘솔

   System.in=>표준입력장치(=키보드를 의미한다.)<==>prompt함수
  
   print(출력대상자("문자열",숫자,논리적인값(true,false))=>출력하라

6. 자바에서는 모든 문장끝에 ;을 써준다.(enter같은 역할)
==========================================================
7.파일을 작성(개발완료)

  0,1로 구성(2진수로 구성)
 
  public class HelloTest{ //문서의 시작 -><script>

   //사장님->프로그램의 시작,끝을 담당
   public static void main(String args[]){
     //모니터에 HelloWorld단어를 출력하라
     System.out.print("Hello World");
   }

}//
 ***********************************************************
  컴파일(compile)->사람이 작성한 문장들(코드->source code)->
                  컴퓨터가 알아듣는 문장으로 변환(2진수)
                 ->javac.exe
               형식) javac 컴파일시킬 파일명.java

C:\webtest\3.java>javac HelloTest.java

C:\webtest\3.java>javac HelloTest.java
HelloTest.java:12: error: ';' expected  //12번째 라인에 오타발생
     System.out.print("Hello World")
                                    ^
1 error

C:\webtest\3.java>javac HelloTest.java ==>HelloTest.class파일이 생성
                                           (bytecode라고 부른다)

C:\webtest\3.java>

  실행(run)->화면에 결과를 보여주는 과정
           ->컴파일과정을 통해서 만들어진 파일(class)->메모리에 올려서 실행
                                                       (RAM)
           ->누구(주체)->p4 JVM(자바 가상 머신)->클래스파일을 메모리에
                                                 올려서 실행시켜주는 역할
              =========================================================
            형식) java 클래스명===>확장자->class사용하면 안된다.

C:\webtest\3.java>java HelloTest.class

오류: 기본 클래스 HelloTest.class을(를) 찾거나 로드할 수 없습니다.

C:\webtest\3.java>java HelloTest
 
 ************************************************************
 2번째 에디터플러스에서 실행해 보자(과제용)---->Eclipse 환경설정
-----------------------------------------------------------------
 컴파일,실행->연결해서 사용할 수 있도록 해줘야 된다.(환경설정)
-----------------------------------------------------------------
메뉴제목:컴파일 또는 compile
명령:c:\jdk1.8\bin\javac.exe ...버튼으로
                                연결
     javac HelloTest.java
인수:컴파일 시킬파일명
     ->$(FileName)  <------파일이름

디렉토리->컴파일할 파일이 있는 디렉토리를
          지정->파일 디렉토리(현재디렉토리)
      ->$(FileDir)

동작->출력내용 캡처
-------------------------------------
메뉴제목:실행 또는 run
명령:c:\jdk1.8\bin\java.exe ...버튼으로
                                연결
     java HelloTest.class (X)
   =>java HelloTest (O)

인수:컴파일 시킬파일명
     ->$(FileNameNoExt)  <------확장자를 뺀
                                파일이름

---------------------------------------------
디렉토리->실행할 파일이 있는 디렉토리를
          지정->파일 디렉토리(현재디렉토리)
      ->$(FileDir)

동작->출력내용 캡처
=========================================
~.java파일을 에디트플러스에서 불러오는 방법

자바파일선택 한 후 오click->editplus선택
전에 작업한 내용을 불러올 수가 있다.

--------------------------------------------
** editplus의 자바예제에서 한글이 깨지면
** Ansi로 설정할것**
--------------------------------------------
HelloTest2.java

class HelloTest2
{
	public static void main(String[] args) 
	{
		/* 파일저장(ctrl+s) ctrl+1(컴파일) ,ctrl+2(실행)
          print(출력할대상자)->한줄로 출력->다음줄로 이동X
		                            ->개행(다음줄로 커서가 이동)
          println(출력할대상자)->출력을 하고나서 다음줄로 이동하라
		*/
		System.out.println("에디트플러스 설정");//
		//document.write("에디트플러스 설정"+"<br>")자바스크립트
		System.out.print("자바 두번째예제");
	}
}
---------------------------------------------------
3.최종->JDK설치=>path환경변수로 설정

  Eclipse=>환경설정->수료하는 날

http://www.eclipse.org=>기관,단체

  =>언어별로 편집기를 제공해주는 무료사이트
  
-----------------------------------------------
       JDK(64bit)        eclipse(64bit로 맞춰야 된다)
jdk-8u152-windows-x64.exe=>eclipse-inst-win64.exe
------------------------------------------------------

C:\webtest\3.java\eclipse\oxygen
=================================
설치하고 나서 launchar->클릭->이클립스가 가동(실행)

1.workspace(작업폴더)를 설정하기

C:\Users\kitcoop\eclipse-workspace
         ======= =================
         계정명  작업폴더

C:\webtest
    3.java
       sou->작업폴더로 설정=>C:\webtest\3.java\sou
======================================================
2.이클립스->java 프로젝트(최상위폴더)생성
          ->JavaStudy라고 프로젝트를 설정

3.예제를 작성->HelloTest.java, HelloTest2.java(에디트플러스)

             ->HelloTest3.java작성
             ->public static void main(String args[])체크
             =>메인메서드를 추가

4.글꼴을 설정->한글처리까지

  C:\webtest\3.java\sou\JavaStudy
                           src->소스파일만 저장이 되는 폴더
                                ~.java

                           bin->클래스파일만 저장이 된 폴더
                                ~.class
===========================================================
**package=>서로 연관이 있는 클래스들끼리 묶어놓은 것
           (폴더)
===========================================================
외부에서 작성한 파일->이클립스에 그대로 복사->한글이 깨짐

**이클립스에서 패키지를 관리하는 방법***

1.패키지를 직접 생성-->예제를 넣어주는 방법(drag & drop)
   src 오click->package->j1204->java파일을 넣어주면 끝
 

  패키지이름을 정해준다.->1204->첫글자는 숫자는 오면
                                 안된다.
                         j1204
                         j1205

2.클래스를 작성하면서 바로 패키지를 만들어준다.(j1205)
  VarTest.java

3.직접 소스코드를 편집하는 경우

  클래스예제 맨앞에 package명령어를 이용해서 패키지를 
  만들어서 작업->컴파일 일어난다.=>"패키지 컴파일"
                                    =============
  형식) package 최상위패키지명.하위패키지명.하위2...;
              com
                javachobo
                    book
                      PackageTest.java
  j1204
    |
     -HelloTest.java
    |
     -abc
       |
        -sub
           HelloTest2.java
           HelloTest3.java
=========================================================
























































































